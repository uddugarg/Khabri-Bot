[{"D:\\Web Development\\khabri-bot\\src\\index.js":"1","D:\\Web Development\\khabri-bot\\src\\App.js":"2","D:\\Web Development\\khabri-bot\\src\\reportWebVitals.js":"3","D:\\Web Development\\khabri-bot\\src\\components\\NewsCards\\NewsCards.js":"4","D:\\Web Development\\khabri-bot\\src\\components\\NewsCard\\NewsCard.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":1596,"mtime":1616098650508,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":2097,"mtime":1616063238197,"results":"10","hashOfConfig":"7"},{"size":2042,"mtime":1616096864972,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"18m5fda",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"24"},"D:\\Web Development\\khabri-bot\\src\\index.js",[],["25","26"],"D:\\Web Development\\khabri-bot\\src\\App.js",[],"D:\\Web Development\\khabri-bot\\src\\reportWebVitals.js",[],"D:\\Web Development\\khabri-bot\\src\\components\\NewsCards\\NewsCards.js",[],"D:\\Web Development\\khabri-bot\\src\\components\\NewsCard\\NewsCard.js",["27","28"],"import { Button, Card, CardActionArea, CardActions, CardContent, CardMedia, Typography } from '@material-ui/core'\r\nimport React, { createRef, useEffect, useState } from 'react'\r\nimport './NewsCard.css';\r\nimport classNames from 'classnames';\r\n\r\nfunction NewsCard({ article: { description, publishedAt, source, title, url, urlToImage }, i, activeArticles }) {\r\n\r\n    const [element, setElement] = useState([]);\r\n    const scrollToRef = (ref) => window.scroll(0, ref.current.offsetTop - 50);\r\n\r\n    useEffect(() => {\r\n        setElement((refs) => Array(20).fill().map((_, j) => refs[j] || createRef()));\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (i === activeArticles && element[activeArticles]) {\r\n            scrollToRef(element[activeArticles]);\r\n        }\r\n    }, [i, activeArticles, element])\r\n\r\n    return (\r\n        <Card ref={element[i]} className={'card', activeArticles === i ? 'activeCard' : 'card'}>\r\n            <CardActionArea href={url} target='_blank'>\r\n                <CardMedia className='card__media' image={urlToImage || 'https://content.getkhabri.com/2020/6/images/1-1591638001725.jpg'} />\r\n                <div className='card__source'>\r\n                    <Typography variant='body2' color='textSecondary' component='h2'>{(new Date(publishedAt)).toDateString()}</Typography>\r\n                    <Typography variant='body2' color='textSecondary' component='h2'>{source.name}</Typography>\r\n                </div>\r\n                <Typography className='card__title' gutterBottom variant='h5'>{title}</Typography>\r\n                <CardContent>\r\n                    <Typography variant='body2' color='textSecondary' component='p'>{description}</Typography>\r\n                </CardContent>\r\n            </CardActionArea>\r\n            <CardActions className='card__actions'>\r\n                <Button size='small' color='primary'>Learn More</Button>\r\n                <Typography variant='h5' color='textSecondary'>{i + 1}</Typography>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default NewsCard\r\n",["29","30"],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":4,"column":8,"nodeType":"37","messageId":"38","endLine":4,"endColumn":18},{"ruleId":"39","severity":1,"message":"40","line":22,"column":49,"nodeType":"41","messageId":"42","endLine":22,"endColumn":50},{"ruleId":"31","replacedBy":"43"},{"ruleId":"33","replacedBy":"44"},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"no-unused-vars","'classNames' is defined but never used.","Identifier","unusedVar","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression",["45"],["46"],"no-global-assign","no-unsafe-negation"]